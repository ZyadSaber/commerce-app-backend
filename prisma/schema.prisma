generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  user_id          Int                @id @default(autoincrement())
  created_at       DateTime           @default(now())
  updated_at       DateTime           @updatedAt
  user_name        String             @unique
  user_password    String
  first_name       String             @default("")
  last_name        String?            @default("")
  language         Int                @default(1)
  status           Boolean            @default(true)
  user_permissions user_permissions[]
}

model page_parent {
  page_parent_id        Int         @id @default(autoincrement())
  created_at            DateTime    @default(now())
  updated_at            DateTime    @updatedAt
  eng_page_parent_name  String      @unique
  arab_page_parent_name String      @unique
  hidden                Boolean     @default(false)
  page_parent_index     Int         @unique
  app_pages             app_pages[]
}

model app_pages {
  page_id             Int                   @id @default(autoincrement())
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  page_parent_id      Int?
  eng_page_name       String                @unique
  arab_page_name      String                @unique
  page_icon           String                @default("")
  page_link           String                @unique
  with_add            Boolean               @default(true)
  with_delete         Boolean               @default(true)
  with_edit           Boolean               @default(true)
  with_print          Boolean               @default(true)
  with_update_history Boolean               @default(false)
  page_disabled       Boolean?              @default(false)
  run_in_modal        Boolean?              @default(false)
  modal_width         String?
  pagination          Int?                  @default(10)
  refresh_time_out    Int                   @default(30000)
  page_parent         page_parent?          @relation(fields: [page_parent_id], references: [page_parent_id])
  labels_linked_pages labels_linked_pages[]
  user_permissions    user_permissions[]
}

model user_permissions {
  user_permissions_id Int       @id @default(autoincrement())
  user_id             Int
  page_id             Int
  status              Boolean   @default(false)
  can_add             Boolean   @default(false)
  can_delete          Boolean   @default(false)
  can_edit            Boolean   @default(false)
  can_print           Boolean   @default(false)
  can_update_history  Boolean   @default(false)
  app_pages           app_pages @relation(fields: [page_id], references: [page_id])
  users               users     @relation(fields: [user_id], references: [user_id])
}

model labels {
  label_id            String                @id @unique
  eng_label           String
  arab_label          String
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  labels_linked_pages labels_linked_pages[]
}

model app_components {
  component_id        Int                   @id @default(autoincrement())
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  component_name      String                @unique
  labels_linked_pages labels_linked_pages[]
}

model labels_linked_pages {
  row_key        Int             @id @default(autoincrement())
  page_id        Int?
  label_id       String
  component_id   Int?
  app_components app_components? @relation(fields: [component_id], references: [component_id])
  labels         labels          @relation(fields: [label_id], references: [label_id])
  app_pages      app_pages?      @relation(fields: [page_id], references: [page_id])
}

model organization_setup {
  organization_no        Int    @id @default(autoincrement())
  eng_organization_name  String
  arab_organization_name String

  //basic data
  tax_number              String?
  commercial_number       String?
  creation_date           DateTime
  organization_address    String?
  organization_phone_p    String?
  organization_phone_s    String?
  organization_email      String?
  organization_website    String?
  organization_notes      String?
  vat_registration_number String?
  bank_account_number     String?

  //report screen
}
