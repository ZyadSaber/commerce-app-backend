{"version":3,"file":"static/js/249.7c1fc341.chunk.js","mappings":"sOASA,MAAMA,EAAaA,KACjB,MAAM,WAAEC,GAAeC,EAAAA,cACjBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,OACX,qBAAEC,EAAoB,oBAAEC,IAAwBC,EAAAA,EAAAA,MAGpDC,OAAO,UAAEC,EAAS,SAAEC,GAAU,SAC9BC,IACEC,EAAAA,EAAAA,IAAe,CACjBC,cAAe,CACbJ,UAAW,GACXC,SAAU,OAIR,OAAEI,EAAM,QAAEC,IAAYC,EAAAA,EAAAA,IAAY,CACtCC,MAAO,iBAGHC,GAAeC,EAAAA,EAAAA,cAAY,KAC/BL,EAAO,CACLM,KAAM,CACJX,YACAC,YAEFW,GAAIC,IAA0B,IAAzB,SAAEC,EAAQ,MAAEC,GAAOF,EACtB,IAAKE,EAAO,CACV,MAAM,aAAEC,EAAY,aAAEC,EAAY,UAAEjB,EAAS,WAAEkB,GAAeJ,EACxDK,EAAa,CACjBC,cAAeJ,EACfC,eACAjB,YACAkB,cAEFtB,IACAC,EAAoBsB,GACpB3B,EAAQ2B,GACRzB,EAAS,QACX,IAEF,GACD,CAACE,EAAsBS,EAAQX,EAAUO,EAAUT,EAASK,EAAqBG,IAEpF,OACEqB,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,UAAU,QAAQC,QAAQ,IAAIC,OAAO,IAAIC,aAAa,IAAIC,IAAI,IAAGC,SAAA,EACrEP,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHO,MAAM,MACNN,UAAU,OACVO,cAAc,SACdC,MAAM,SACNC,eAAe,SACfC,gBAAiB3C,EACjBqC,IAAI,OAAMC,SAAA,EAEVM,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,MAAM,QACNP,MAAM,MACNQ,KAAK,YACLnC,SAAUA,EACVoC,MAAOtC,KAETkC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,MAAM,QACNG,KAAK,WACLV,MAAM,MACNQ,KAAK,WACLnC,SAAUA,EACVoC,MAAOrC,KAETiC,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CACLJ,MAAM,QACNP,MAAM,MACNvB,QAASA,EACTmC,QAAShC,QAGbyB,EAAAA,EAAAA,KAACZ,EAAAA,EAAI,CACHO,MAAM,MACNN,UAAU,OACVU,gBAAiB3C,EACjByC,MAAM,SACNC,eAAe,SAAQJ,UAEvBM,EAAAA,EAAAA,KAAA,OACEQ,IAAG,GAAAC,OAAKC,6BAA+B,2BACvCC,IAAI,aAGH,EAIX,GAAeC,EAAAA,EAAAA,MAAKzD,E","sources":["packages/sign-in-page/component.tsx"],"sourcesContent":["import { memo, useCallback } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { primaryColors } from \"../constants\";\r\nimport Flex from \"../flex\";\r\nimport Button from \"../button\";\r\nimport { useFormManager, useMutation, useLocalStorage } from \"../hooks\";\r\nimport { useSetAuthConfigData } from \"../app-config-provider\";\r\nimport InputText from \"../input-text\";\r\n\r\nconst SignInPage = () => {\r\n  const { lightGrey1 } = primaryColors;\r\n  const setAuth = useSetAuthConfigData();\r\n  const navigate = useNavigate();\r\n  const { clearAllLocalStorage, setLocalStorageData } = useLocalStorage();\r\n\r\n  const {\r\n    state: { user_name, password },\r\n    onChange,\r\n  } = useFormManager({\r\n    initialValues: {\r\n      user_name: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const { mutate, loading } = useMutation({\r\n    apiId: \"POST_SIGN_IN\",\r\n  });\r\n\r\n  const handleSignIn = useCallback(() => {\r\n    mutate({\r\n      data: {\r\n        user_name,\r\n        password,\r\n      },\r\n      cb: ({ response, error }) => {\r\n        if (!error) {\r\n          const { access_token, build_number, user_name, p_language } = response;\r\n          const authRecord = {\r\n            authorization: access_token,\r\n            build_number,\r\n            user_name,\r\n            p_language\r\n          };\r\n          clearAllLocalStorage();\r\n          setLocalStorageData(authRecord);\r\n          setAuth(authRecord);\r\n          navigate(\"/home\");\r\n        }\r\n      },\r\n    });\r\n  }, [clearAllLocalStorage, mutate, navigate, password, setAuth, setLocalStorageData, user_name]);\r\n\r\n  return (\r\n    <Flex minHeight=\"100vh\" padding=\"0\" margin=\"0\" borderRadius=\"0\" gap=\"0\">\r\n      <Flex\r\n        width=\"50%\"\r\n        minHeight=\"100%\"\r\n        flexDirection=\"column\"\r\n        align=\"center\"\r\n        justifyContent=\"center\"\r\n        backgroundColor={lightGrey1}\r\n        gap=\"10px\"\r\n      >\r\n        <InputText\r\n          label=\"usrnm\"\r\n          width=\"30%\"\r\n          name=\"user_name\"\r\n          onChange={onChange}\r\n          value={user_name}\r\n        />\r\n        <InputText\r\n          label=\"pswrd\"\r\n          type=\"password\"\r\n          width=\"30%\"\r\n          name=\"password\"\r\n          onChange={onChange}\r\n          value={password}\r\n        />\r\n        <Button\r\n          label=\"login\"\r\n          width=\"15%\"\r\n          loading={loading}\r\n          onClick={handleSignIn}\r\n        />\r\n      </Flex>\r\n      <Flex\r\n        width=\"50%\"\r\n        minHeight=\"100%\"\r\n        backgroundColor={lightGrey1}\r\n        align=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <img\r\n          src={`${process.env.REACT_APP_BASE_LINK}app_images/primary_logo`}\r\n          alt=\"logo\"\r\n        />\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default memo(SignInPage);\r\n"],"names":["SignInPage","lightGrey1","primaryColors","setAuth","useSetAuthConfigData","navigate","useNavigate","clearAllLocalStorage","setLocalStorageData","useLocalStorage","state","user_name","password","onChange","useFormManager","initialValues","mutate","loading","useMutation","apiId","handleSignIn","useCallback","data","cb","_ref","response","error","access_token","build_number","p_language","authRecord","authorization","_jsxs","Flex","minHeight","padding","margin","borderRadius","gap","children","width","flexDirection","align","justifyContent","backgroundColor","_jsx","InputText","label","name","value","type","Button","onClick","src","concat","process","alt","memo"],"sourceRoot":""}