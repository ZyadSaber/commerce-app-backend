{"version":3,"file":"static/js/707.522e2455.chunk.js","mappings":"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","sources":["packages/input-number/style.ts","packages/input-number/index.tsx","packages/select/style.ts","packages/select/index.tsx","packages/select-with-api/index.tsx","packages/pages-page/Partials/ModalView.tsx","packages/pages-page/constants.ts","packages/pages-page/component.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { InputNumber } from \"antd\";\r\nimport { primaryColors } from \"../constants\";\r\nimport { inputNumberProp } from \"./interface\";\r\n\r\nexport const StyledInput = styled(InputNumber)<inputNumberProp>`\r\n  width: 100%;\r\n  /* padding: 5px 7px; */\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  transition: border-color 0.3s;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  /* ${({ required }) =>\r\n    required && `background-color:  ${primaryColors.required}`}; */\r\n\r\n  &:focus {\r\n    outline: none !important;\r\n    border-color: #007bff;\r\n  }\r\n`;\r\n","import { memo, useCallback } from \"react\";\r\nimport FloatingLabel from \"../floating-label\";\r\nimport { StyledInput } from \"./style\";\r\nimport { inputNumberProp } from \"./interface\";\r\n\r\nconst InputNumber = ({\r\n  disabled,\r\n  value,\r\n  name,\r\n  label,\r\n  onChange,\r\n  height,\r\n  width = \"200px\",\r\n  margin,\r\n  max,\r\n  min = 0,\r\n  fixedBy = 2,\r\n  ...props\r\n}: inputNumberProp) => {\r\n  const handleChange = useCallback(\r\n    (_: any) => {\r\n      onChange({ name: name, value: +_.toFixed(fixedBy) });\r\n    },\r\n    [fixedBy, name, onChange]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <FloatingLabel\r\n        label={label}\r\n        width={width}\r\n        height={height}\r\n        margin={margin}\r\n        hasContent={!!value?.toString()}\r\n      >\r\n        <StyledInput\r\n          disabled={disabled}\r\n          value={value}\r\n          name={name}\r\n          onChange={handleChange}\r\n          margin={margin}\r\n          max={max}\r\n          min={min}\r\n          fixedBy={fixedBy}\r\n          {...props}\r\n        />\r\n      </FloatingLabel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(InputNumber);\r\nexport * from \"./interface\";\r\n","import styled from \"styled-components\";\r\nimport { Select } from \"antd\";\r\nimport { primaryColors } from \"../constants\";\r\nimport { SelectProp } from \"./interface\";\r\n\r\nconst { inputBorderColor, required: requiredColor, blue } = primaryColors;\r\n\r\nexport const StyledSelect = styled(Select)<SelectProp>`\r\n  width: 100%;\r\n\r\n  .ant-select-selector {\r\n    border: 1px solid ${inputBorderColor} !important;\r\n    border-radius: 5px;\r\n    transition: border-color 0.3s;\r\n    margin: 0;\r\n\r\n    &:hover {\r\n      outline: none !important;\r\n      border-color: ${blue} !important;\r\n    }\r\n\r\n    ${({ required }) =>\r\n      required &&\r\n      `\r\n  border-color:  ${requiredColor} !important;\r\n  box-shadow: 0px 0px 2px  ${required} !important;\r\n  `};\r\n  }\r\n`;\r\n","import { memo, useCallback } from \"react\";\r\nimport FloatingLabel from \"../floating-label\";\r\nimport { StyledSelect } from \"./style\";\r\nimport { Option, SelectProp } from \"./interface\";\r\n\r\nconst Select = ({\r\n  onChange,\r\n  label,\r\n  options,\r\n  value,\r\n  name,\r\n  width,\r\n  height,\r\n  margin,\r\n  allowClear = true,\r\n  loading = false,\r\n  mode,\r\n  required,\r\n  canSearch = true,\r\n}: SelectProp) => {\r\n  const handleOptionClick = useCallback(\r\n    (index: number | string, option: Option) => {\r\n      onChange && onChange({ name, option, value: index });\r\n    },\r\n    [name, onChange]\r\n  );\r\n\r\n  const handleClear = useCallback(() => {\r\n    onChange && onChange({ name, value: undefined });\r\n  }, [name, onChange]);\r\n\r\n  return (\r\n    <FloatingLabel\r\n      label={label}\r\n      width={width}\r\n      height={height}\r\n      margin={margin}\r\n      hasContent={!!value}\r\n    >\r\n      <StyledSelect\r\n        options={options}\r\n        value={value}\r\n        onClear={handleClear}\r\n        allowClear={allowClear}\r\n        loading={loading}\r\n        showSearch={canSearch}\r\n        mode={mode}\r\n        //@ts-ignore\r\n        onChange={handleOptionClick}\r\n        required={required}\r\n      />\r\n    </FloatingLabel>\r\n  );\r\n};\r\n\r\nexport default memo(Select);\r\nexport * from \"./interface\";\r\n","import { memo, useState } from \"react\";\r\nimport Select from \"../select\";\r\nimport { useFetch } from \"../hooks\";\r\nimport { Option } from \"../select\";\r\nimport { SelectWithApiProps } from \"./interface\";\r\n\r\nconst SelectWithApi = ({\r\n  apiId,\r\n  checkForParams,\r\n  fetchOnFirstRun = true,\r\n  runQueryWhenLanguageChanged,\r\n  params,\r\n  ...props\r\n}: SelectWithApiProps) => {\r\n  const [options, setOptions] = useState<Option[]>([]);\r\n  const { loading } = useFetch({\r\n    checkForParams,\r\n    apiId,\r\n    fetchOnFirstRun,\r\n    runQueryWhenLanguageChanged,\r\n    params,\r\n    onResponse: setOptions,\r\n  });\r\n  //@ts-ignore\r\n  return <Select options={options} loading={loading} {...props} />;\r\n};\r\n\r\nexport default memo(SelectWithApi);\r\n","import { memo, useCallback } from \"react\";\r\nimport { useFormManager } from \"../../hooks\";\r\nimport InputText from \"../../input-text\";\r\nimport InputNumber from \"../../input-number\";\r\nimport CheckBox from \"../../check-box\";\r\nimport Flex from \"../../flex\";\r\nimport CreateNotification from \"../../notification\";\r\nimport Modal from \"../../modal\";\r\nimport SelectWithApi from \"../../select-with-api\";\r\nimport { ModalViewProp } from \"../../types\";\r\n\r\nconst ModalView = ({\r\n  selectedRecord,\r\n  handleClose,\r\n  handleSaveRecord,\r\n  loading,\r\n  visible,\r\n  fetchTableData,\r\n}: ModalViewProp) => {\r\n  const { state, onChange } = useFormManager({\r\n    initialValues: selectedRecord,\r\n  });\r\n\r\n  const {\r\n    eng_page_name,\r\n    arab_page_name,\r\n    page_link,\r\n    modal_width,\r\n    pagination,\r\n    refresh_time_out,\r\n    page_disabled,\r\n    run_in_modal,\r\n    with_add,\r\n    with_edit,\r\n    with_delete,\r\n    with_print,\r\n    with_update_history,\r\n    page_parent_id,\r\n  } = state;\r\n\r\n  const handleSave = useCallback(() => {\r\n    handleSaveRecord({\r\n      data: state,\r\n      cb: ({ error }) => {\r\n        if (error) {\r\n          return CreateNotification(\"error\", error.message);\r\n        }\r\n        handleClose();\r\n        fetchTableData();\r\n        CreateNotification(\"success\");\r\n      },\r\n    });\r\n  }, [fetchTableData, handleClose, handleSaveRecord, state]);\r\n\r\n  return (\r\n    <Modal\r\n      label=\"dtls\"\r\n      onClose={handleClose}\r\n      onOK={handleSave}\r\n      loading={loading}\r\n      visible={visible}\r\n    >\r\n      <Flex width=\"100%\" align=\"center\" wrap gap=\"10px\">\r\n        <InputText\r\n          name=\"eng_page_name\"\r\n          onChange={onChange}\r\n          value={eng_page_name}\r\n          label=\"englshnm\"\r\n          width=\"49%\"\r\n        />\r\n        <InputText\r\n          name=\"arab_page_name\"\r\n          onChange={onChange}\r\n          value={arab_page_name}\r\n          width=\"49%\"\r\n          label=\"arbcnm\"\r\n        />\r\n        <InputText\r\n          name=\"page_link\"\r\n          onChange={onChange}\r\n          value={page_link}\r\n          width=\"49%\"\r\n          label=\"lnk\"\r\n        />\r\n        <InputText\r\n          name=\"modal_width\"\r\n          onChange={onChange}\r\n          value={modal_width}\r\n          width=\"49%\"\r\n          label=\"mdlWdth\"\r\n        />\r\n        <InputNumber\r\n          name=\"pagination\"\r\n          onChange={onChange}\r\n          value={pagination}\r\n          width=\"49%\"\r\n          label=\"pgntn\"\r\n        />\r\n        <InputNumber\r\n          name=\"refresh_time_out\"\r\n          onChange={onChange}\r\n          value={refresh_time_out}\r\n          width=\"49%\"\r\n          label=\"rfrshtmeot\"\r\n        />\r\n        <CheckBox\r\n          name=\"page_disabled\"\r\n          onChange={onChange}\r\n          checked={page_disabled}\r\n          label=\"dsbld\"\r\n        />\r\n        <CheckBox\r\n          name=\"run_in_modal\"\r\n          onChange={onChange}\r\n          checked={run_in_modal}\r\n          label=\"rninmdl\"\r\n        />\r\n        <CheckBox\r\n          name=\"with_add\"\r\n          onChange={onChange}\r\n          checked={with_add}\r\n          label=\"wthad\"\r\n        />\r\n        <CheckBox\r\n          name=\"with_edit\"\r\n          onChange={onChange}\r\n          checked={with_edit}\r\n          label=\"wthedt\"\r\n        />\r\n        <CheckBox\r\n          name=\"with_delete\"\r\n          onChange={onChange}\r\n          checked={with_delete}\r\n          label=\"wthdlt\"\r\n        />\r\n        <CheckBox\r\n          name=\"with_print\"\r\n          onChange={onChange}\r\n          checked={with_print}\r\n          label=\"wthprnt\"\r\n        />\r\n        <CheckBox\r\n          name=\"with_update_history\"\r\n          onChange={onChange}\r\n          checked={with_update_history}\r\n          label=\"wthupdthstry\"\r\n        />\r\n        <SelectWithApi\r\n          apiId=\"PAGE_PARENT_LIST\"\r\n          name=\"page_parent_id\"\r\n          value={page_parent_id}\r\n          onChange={onChange}\r\n          width=\"30%\"\r\n          label=\"page_parent_id\"\r\n        />\r\n      </Flex>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default memo(ModalView);\r\n","export const columns = [\r\n  {\r\n    title: \"id\",\r\n    dataIndex: \"page_id\",\r\n    width: \"3%\",\r\n  },\r\n  {\r\n    title: \"englshnm\",\r\n    dataIndex: \"eng_page_name\",\r\n    width: \"13.4%\",\r\n  },\r\n  {\r\n    title: \"arbcnm\",\r\n    dataIndex: \"arab_page_name\",\r\n    width: \"13.4%\",\r\n  },\r\n  {\r\n    title: \"lnk\",\r\n    dataIndex: \"page_link\",\r\n    width: \"10%\",\r\n  },\r\n  {\r\n    title: \"dsbld\",\r\n    dataIndex: \"page_disabled\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"rninmdl\",\r\n    dataIndex: \"run_in_modal\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"wthad\",\r\n    dataIndex: \"with_add\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"wthedt\",\r\n    dataIndex: \"with_edit\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"wthdlt\",\r\n    dataIndex: \"with_delete\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"wthprnt\",\r\n    dataIndex: \"with_print\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"wthupdthstry\",\r\n    dataIndex: \"with_update_history\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"mdlWdth\",\r\n    dataIndex: \"modal_width\",\r\n    width: \"5%\",\r\n  },\r\n  {\r\n    title: \"pgntn\",\r\n    dataIndex: \"pagination\",\r\n    width: \"6%\",\r\n  },\r\n  {\r\n    title: \"rfrshtmeot\",\r\n    dataIndex: \"refresh_time_out\",\r\n    width: \"6%\",\r\n  },\r\n];\r\n","import { memo } from \"react\";\r\nimport { PageTitle } from \"../page-title\";\r\nimport TableWithApi, {\r\n  useTableControlsButtons,\r\n  useCreateTableActionRef,\r\n} from \"../table-with-api-query\";\r\nimport ModalView from \"./Partials/ModalView\";\r\nimport { columns } from \"./constants\";\r\n\r\nconst PagesPage = () => {\r\n  const { tableRef, fetchTableData } = useCreateTableActionRef();\r\n\r\n  const {\r\n    selectedRecord,\r\n    setSelectedRecord,\r\n    visible,\r\n    handleClose,\r\n    handleAdd,\r\n    handleEdit,\r\n    handleDelete,\r\n    handleSaveRecord,\r\n    loading,\r\n  } = useTableControlsButtons({\r\n    apiId: \"POST_PAGE_SETUP_TABLE_DATA\",\r\n    runFetch: fetchTableData,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <PageTitle children=\"pgstp\" />\r\n      <TableWithApi\r\n        //@ts-ignore\r\n        ref={tableRef}\r\n        apiId=\"QUERY_PAGE_SETUP_TABLE_DATA\"\r\n        columns={columns}\r\n        fetchOnFirstRun\r\n        rowKey=\"page_id\"\r\n        onSelectedRow={setSelectedRecord}\r\n        hideTools={false}\r\n        canAdd\r\n        canDelete\r\n        canEdit\r\n        handleAdd={handleAdd}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n      />\r\n      {visible && (\r\n        <ModalView\r\n          visible={visible}\r\n          selectedRecord={selectedRecord}\r\n          handleClose={handleClose}\r\n          handleSaveRecord={handleSaveRecord}\r\n          loading={loading}\r\n          fetchTableData={fetchTableData}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(PagesPage);\r\n"],"names":["StyledInput","styled","InputNumber","_templateObject","_taggedTemplateLiteral","_ref","required","concat","primaryColors","disabled","value","name","label","onChange","height","width","margin","max","min","fixedBy","props","handleChange","useCallback","_","toFixed","_jsx","_Fragment","children","FloatingLabel","hasContent","toString","memo","inputBorderColor","requiredColor","blue","StyledSelect","Select","options","allowClear","loading","mode","canSearch","handleOptionClick","index","option","handleClear","undefined","onClear","showSearch","SelectWithApi","apiId","checkForParams","fetchOnFirstRun","runQueryWhenLanguageChanged","params","setOptions","useState","useFetch","onResponse","ModalView","selectedRecord","handleClose","handleSaveRecord","visible","fetchTableData","state","useFormManager","initialValues","eng_page_name","arab_page_name","page_link","modal_width","pagination","refresh_time_out","page_disabled","run_in_modal","with_add","with_edit","with_delete","with_print","with_update_history","page_parent_id","handleSave","data","cb","_ref2","error","CreateNotification","message","Modal","onClose","onOK","_jsxs","Flex","align","wrap","gap","InputText","CheckBox","checked","columns","title","dataIndex","PagesPage","tableRef","useCreateTableActionRef","setSelectedRecord","handleAdd","handleEdit","handleDelete","useTableControlsButtons","runFetch","PageTitle","TableWithApi","ref","rowKey","onSelectedRow","hideTools","canAdd","canDelete","canEdit"],"sourceRoot":""}